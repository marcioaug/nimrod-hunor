/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 16 12:47:00 GMT 2019
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang.WordUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WordUtils_ESTest extends WordUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" Ce", 0, 0, " Ce");
      assertEquals(" Ce", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = WordUtils.abbreviate("mQ", 2, 2, "mQ");
      assertEquals("mQ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      char[] charArray0 = new char[13];
      String string0 = WordUtils.capitalizeFully("java.awt.fonts", charArray0);
      assertEquals("Java.awt.fonts", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = WordUtils.wrap(" \t\r\n\b", (-60), "", true);
      assertEquals("\t\r\n\b", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = WordUtils.abbreviate("Windows 9", (-1), 0, (String) null);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = WordUtils.wrap("", (-1), "", false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 2251);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WordUtils.wrap("", (-982));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WordUtils.initials((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WordUtils.capitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = WordUtils.initials(" ", (char[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = WordUtils.initials("H", (char[]) null);
      assertEquals("H", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[4];
      String string0 = WordUtils.initials("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("Windows 9", (char[]) null);
      assertEquals("windows 9", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("H", (char[]) null);
      assertEquals("H", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[2];
      String string0 = WordUtils.capitalize((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = WordUtils.capitalize("7Fsus+T", (char[]) null);
      assertEquals("7Fsus+T", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = WordUtils.wrap("FI 7,,|)[qcqUVF", (-2199), "", false);
      assertEquals("FI7,,|)[qcqUVF", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = WordUtils.wrap("H", 32, "H", true);
      assertEquals("H", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = WordUtils.wrap("Java.awt.headless", (-891), (String) null, true);
      assertEquals("J\na\nv\na\n.\na\nw\nt\n.\nh\ne\na\nd\nl\ne\ns\ns", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = WordUtils.abbreviate(" Ce", (-2448), 118, " Ce");
      assertEquals(" Ce", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = WordUtils.abbreviate("7s[v&~O83j|Soo", 2, (-223), "mac oS x");
      assertEquals("7smac oS x", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        WordUtils.abbreviate("Ofpl./}0(nh0 9$", (-163), (-163), (String) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = WordUtils.abbreviate("java.awt.fonts", (-155), 3005, "org.apache.commons.lang.WordUtils");
      assertEquals("java.awt.fonts", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = WordUtils.abbreviate("X_=Q;", 1161, (-593), "gv0");
      assertEquals("X_=Q;", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = WordUtils.abbreviate("", 0, 0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = WordUtils.abbreviate((String) null, 1835, 0, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = WordUtils.abbreviate("2E", (-1), (-1), "i)ARes-wA;\"<XGX");
      assertEquals("2E", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[2] = '*';
      String string0 = WordUtils.capitalize("6A8p*z@W<%", charArray0);
      assertEquals("6A8p*Z@W<%", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = WordUtils.initials("e~B*o| \"");
      assertEquals("e\"", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.initials("\\OC'yz*{eosGJRb", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.initials("@Q", charArray0);
      assertEquals("@", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[13];
      String string0 = WordUtils.initials((String) null, charArray0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = WordUtils.swapCase("ofpl./}0(nH0 9$");
      assertEquals("OFPL./}0(Nh0 9$", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = WordUtils.swapCase("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = WordUtils.swapCase((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("Mac OS X");
      assertEquals("mac oS x", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.uncapitalize("H", charArray0);
      assertEquals("H", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = WordUtils.uncapitalize("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = WordUtils.uncapitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.uncapitalize("@Q", charArray0);
      assertEquals("@Q", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[5];
      String string0 = WordUtils.capitalizeFully("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully((String) null, (char[]) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalizeFully(" ", charArray0);
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("H", charArray0);
      assertEquals("H", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = WordUtils.capitalize((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = WordUtils.capitalize("", charArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = WordUtils.wrap("Windows 9", (-1));
      assertEquals("Windows\n9", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = WordUtils.wrap("Caught a SecurityException reading the system property '", 0, "7`S,*&B|2)zdaIe@(~", true);
      assertEquals("C7`S,*&B|2)zdaIe@(~a7`S,*&B|2)zdaIe@(~u7`S,*&B|2)zdaIe@(~g7`S,*&B|2)zdaIe@(~h7`S,*&B|2)zdaIe@(~t7`S,*&B|2)zdaIe@(~a7`S,*&B|2)zdaIe@(~S7`S,*&B|2)zdaIe@(~e7`S,*&B|2)zdaIe@(~c7`S,*&B|2)zdaIe@(~u7`S,*&B|2)zdaIe@(~r7`S,*&B|2)zdaIe@(~i7`S,*&B|2)zdaIe@(~t7`S,*&B|2)zdaIe@(~y7`S,*&B|2)zdaIe@(~E7`S,*&B|2)zdaIe@(~x7`S,*&B|2)zdaIe@(~c7`S,*&B|2)zdaIe@(~e7`S,*&B|2)zdaIe@(~p7`S,*&B|2)zdaIe@(~t7`S,*&B|2)zdaIe@(~i7`S,*&B|2)zdaIe@(~o7`S,*&B|2)zdaIe@(~n7`S,*&B|2)zdaIe@(~r7`S,*&B|2)zdaIe@(~e7`S,*&B|2)zdaIe@(~a7`S,*&B|2)zdaIe@(~d7`S,*&B|2)zdaIe@(~i7`S,*&B|2)zdaIe@(~n7`S,*&B|2)zdaIe@(~g7`S,*&B|2)zdaIe@(~t7`S,*&B|2)zdaIe@(~h7`S,*&B|2)zdaIe@(~e7`S,*&B|2)zdaIe@(~s7`S,*&B|2)zdaIe@(~y7`S,*&B|2)zdaIe@(~s7`S,*&B|2)zdaIe@(~t7`S,*&B|2)zdaIe@(~e7`S,*&B|2)zdaIe@(~m7`S,*&B|2)zdaIe@(~p7`S,*&B|2)zdaIe@(~r7`S,*&B|2)zdaIe@(~o7`S,*&B|2)zdaIe@(~p7`S,*&B|2)zdaIe@(~e7`S,*&B|2)zdaIe@(~r7`S,*&B|2)zdaIe@(~t7`S,*&B|2)zdaIe@(~y7`S,*&B|2)zdaIe@(~'", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = WordUtils.wrap((String) null, 0, "java.awt.fonts", false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      WordUtils wordUtils0 = new WordUtils();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = WordUtils.initials("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = WordUtils.capitalizeFully("'S3N(bB1KOw");
      assertEquals("'s3n(bb1kow", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = WordUtils.capitalize(" Ce");
      assertEquals(" Ce", string0);
  }
}
